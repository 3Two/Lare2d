
Version 4.0 - November 2019
---------------------------
This is a major update. Tested at Warwick but likely to still be untested options. Please report bugs.
1. Added an option to calculate an intiial potential field
2. Added Makefile option to use advective predictor step (now the default) instead of Cauchy solution. 
This will ensure any initial potential field is an exact numerical equilibrium.
3. Added a cooling term based on moving exponential avergae - controlled from control.f90
4. Moved radiative losses to base src directory. Includes Townsend exact intergration and a user defined 
heating function.
5. Moved diagnostics.f90 into core and should only be edited if you're sure you know what you are doing.
6. Removed option for damp_boundaries - see visc3 below.
7. Added a simple (visc3 * \nabla^2 v) damping term. visc3 can vary with space and is set in initial 
conditions. Useful for uniform background damping or increased damping near boundaries. This viscosity 
doesn't contribute to heating.
8. Changed the thermal flux limiter to a Larsen limiter. This means it can now be included in the 
diffusive timestep stability limit and should improve runtime.


Version 3.4 - June 2018
-----------------------
1. Simplified the Boris Lafven wave speed limiters
2. Bumped the version number so Lare2d and LAre3d have the same version number


Version 3.3 - May 2018
----------------------
1. Added Boris Alfven speed limiters with option to apply to jxB only
2. Moved radiative.f90 to src directory as now user configurable
3. Added user defined heating function to radiative.f90
4. Updated manual


Version 3.2 - February 2018
---------------------------
1. Replaced the optically thin radiative losses with a treatement based on Townsend 
exact integration. How to use this is documented in the source code radiative.f90 
and background added to the manual.
2. Renamed the boundary condition BC_OTHER to BC_USER to match the expectation 
that this is supplied by the use not a default in the code.
3. Renamed the options for open boundaries inside openboundary.f90.
4  Tidied the code to make maintenance easier.
5. Use must now specific all values of MHD variable arrays in initial_condiction
and not rely on Lare2d to fill ghost cells as before.
